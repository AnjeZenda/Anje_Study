cmake_minimum_required(VERSION 3.23)
project(Game_ver2_0)

set(CMAKE_CXX_STANDARD 17)

add_executable(Game_ver2_0 main.cpp Facade/Logic/Field/Cell.cpp Facade/Logic/Field/Cell.h Facade/Logic/Field/Field.cpp Facade/Logic/Field/Field.h Facade/Logic/Player/Player.cpp Facade/Logic/Player/Player.h Facade/Logic/Events/IEvent.h Facade/Game.cpp Facade/Game.h Facade/Graphic/CellView.cpp Facade/Graphic/CellView.h Facade/Graphic/PlayerView.cpp Facade/Graphic/PlayerView.h Facade/Graphic/Drawer.cpp Facade/Graphic/Drawer.h Facade/Logic/EventFactory/EventFactory.cpp Facade/Logic/EventFactory/EventFactory.h Facade/Logic/Events/PlayerEvent/PlayerEvent.cpp Facade/Logic/Events/PlayerEvent/PlayerEvent.h Facade/Logic/Events/FieldEvent/FieldEvent.cpp Facade/Logic/Events/FieldEvent/FieldEvent.h Facade/Logic/Events/FieldEvent/ChangePassability.cpp Facade/Logic/Events/FieldEvent/ChangePassability.h Facade/Logic/Events/FieldEvent/ReverseField.cpp Facade/Logic/Events/FieldEvent/ReverseField.h Facade/Logic/Events/PlayerEvent/HealEvent.cpp Facade/Logic/Events/PlayerEvent/HealEvent.h Facade/Logic/Events/PlayerEvent/ManaEvent.cpp Facade/Logic/Events/PlayerEvent/ManaEvent.h Facade/Logic/Events/PlayerEvent/CurseEvent.cpp Facade/Logic/Events/PlayerEvent/CurseEvent.h Facade/Logic/Events/PlayerEvent/DamageCurseEvent.cpp Facade/Logic/Events/PlayerEvent/DamageCurseEvent.h Facade/UserDisplay/Menu.cpp Facade/UserDisplay/Menu.h Facade/Logic/Mediator/IMediator.h Facade/Logic/Mediator/Mediator.cpp Facade/Logic/Mediator/Mediator.h Facade/Logic/Controllers/IController.h Facade/Logic/Reader/Reader.cpp Facade/Logic/Reader/Reader.h Facade/Logic/Controllers/PlayerController.cpp Facade/Logic/Controllers/PlayerController.h Facade/Logic/Reader/KeyboardReader.cpp Facade/Logic/Reader/KeyboardReader.h Facade/Logic/Field/FieldGenerator.cpp Facade/Logic/Field/FieldGenerator.h Facade/Logic/Events/ExitEvent.cpp Facade/Logic/Events/ExitEvent.h Facade/Logic/Field/FieldChanger.cpp Facade/Logic/Field/FieldChanger.h Facade/Logic/Player/IPlayerObserver.h Facade/Logic/Player/PlayerObserver.cpp Facade/Logic/Player/PlayerObserver.h Facade/IGame.h Facade/Logic/Log/Logger.cpp Facade/Logic/Log/Logger.h Facade/Logic/Log/ILogger.h Facade/Logic/Log/ConsoleLogger.cpp Facade/Logic/Log/ConsoleLogger.h Facade/Logic/Log/FileLogger.cpp Facade/Logic/Log/FileLogger.h Facade/LogInitializer.cpp Facade/LogInitializer.h Facade/Logic/Events/EventObserver.cpp Facade/Logic/Events/EventObserver.h Facade/Logic/Field/IFieldObserver.h Facade/Logic/Field/FieldObserver.cpp Facade/Logic/Field/FieldObserver.h Facade/Logic/Reader/Converter.cpp Facade/Logic/Reader/Converter.h Facade/Logic/ReaderFactory/IReaderFactory.h Facade/Logic/ReaderFactory/InputReaderFactory.cpp Facade/Logic/ReaderFactory/InputReaderFactory.h Facade/Logic/ReaderFactory/InputSystem.cpp Facade/Logic/ReaderFactory/InputSystem.h Facade/Logic/ReaderFactory/ControlSchemeProvider.cpp Facade/Logic/ReaderFactory/ControlSchemeProvider.h Facade/Logic/ReaderFactory/KeyEventScheme.cpp Facade/Logic/ReaderFactory/KeyEventScheme.h Facade/Logic/ReaderFactory/SFMLHandler.cpp Facade/Logic/ReaderFactory/SFMLHandler.h Facade/Logic/ReaderFactory/SFMLSubscriber.cpp Facade/Logic/ReaderFactory/SFMLSubscriber.h Facade/Logic/Rules/RuleWalls.h Facade/Logic/FieldScheme/FieldScheme.h Facade/Logic/FieldScheme/LevelGenerator.cpp Facade/Logic/FieldScheme/LevelGenerator.h Facade/Logic/FieldScheme/Strategy/IStrategy.h Facade/Logic/FieldScheme/Strategy/FirstLevelInfo.cpp Facade/Logic/FieldScheme/Strategy/FirstLevelInfo.h Facade/Logic/Rules/RulePlayerPosition.h Facade/Logic/Rules/RuleEnemy.h Facade/Logic/Rules/RuleUnexplored.h Facade/Logic/Rules/RuleFieldChanger.h Facade/Logic/Rules/RuleExit.h Facade/Logic/FieldScheme/Strategy/SecondLevelInfo.cpp Facade/Logic/FieldScheme/Strategy/SecondLevelInfo.h Facade/Logic/FieldScheme/Strategy/ThirdLevelInfo.cpp Facade/Logic/FieldScheme/Strategy/ThirdLevelInfo.h Facade/Logic/Saver/Saver.cpp Facade/Logic/Saver/Saver.h Facade/Logic/Saver/GameInfo.cpp Facade/Logic/Saver/GameInfo.h Facade/Logic/Saver/SaverController.cpp Facade/Logic/Saver/SaverController.h Facade/Logic/Controllers/GameController.cpp Facade/Logic/Controllers/GameController.h)

set(SFML_STATIC_LIBRARIES TRUE)
set(SFML_DIR D:/SFML/lib/cmake/SFML)
find_package(SFML COMPONENTS system window graphics audio network REQUIRED)

include_directories(D:/SFML/include)
target_link_libraries(Game_ver2_0 sfml-system sfml-graphics sfml-window sfml-audio)
